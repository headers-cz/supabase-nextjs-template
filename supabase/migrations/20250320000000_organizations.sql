create table "public"."organizations" (
    "id" bigint generated by default as identity not null,
    "uuid" uuid not null default gen_random_uuid(),
    "created_at" timestamp with time zone not null default now(),
    "name" text not null default 'My Organization',
    "owner_id" uuid not null
);

-- Primární klíč
CREATE UNIQUE INDEX organizations_pkey ON public.organizations USING btree (id);
alter table "public"."organizations" add constraint "organizations_pkey" PRIMARY KEY using index "organizations_pkey";

-- Unikátní uuid
CREATE UNIQUE INDEX organizations_uuid_key ON public.organizations USING btree (uuid);
alter table "public"."organizations" add constraint "organizations_uuid_key" UNIQUE using index "organizations_uuid_key";

-- Unikátní owner_id
CREATE UNIQUE INDEX organizations_owner_id_key ON public.organizations USING btree (owner_id);
alter table "public"."organizations" add constraint "organizations_owner_id_key" UNIQUE using index "organizations_owner_id_key";

-- Vazba na auth.users
alter table "public"."organizations" add constraint "organizations_owner_id_fkey" FOREIGN KEY (owner_id) REFERENCES auth.users(id) ON DELETE CASCADE;

-- Funkce pro vytvoření organizace pro nového uživatele
create or replace function public.handle_new_user()
returns trigger
language plpgsql
security definer set search_path = public
as $$
begin
  -- Vytvoření organizace pro nového uživatele
  insert into public.organizations (name, owner_id)
  values ('My Organization', new.id);
  
  return new;
end;
$$;

-- Trigger na nového uživatele
create trigger on_auth_user_created
  after insert on auth.users
  for each row execute procedure public.handle_new_user();

-- RLS na organizations
alter table "public"."organizations" enable row level security;

create policy "Uživatelé vidí pouze své organizace"
on "public"."organizations"
as permissive
for all
to authenticated
using ((auth.uid() = owner_id));

-- Oprávnění
grant all on table "public"."organizations" to "anon";
grant all on table "public"."organizations" to "authenticated";
grant all on table "public"."organizations" to "service_role";

-- Vytvoření organizací pro existující uživatele, kteří ještě nemají organizaci
DO $$
DECLARE
BEGIN
  INSERT INTO public.organizations (name, owner_id)
  SELECT 'My Organization', u.id
  FROM auth.users u
  LEFT JOIN public.organizations o ON u.id = o.owner_id
  WHERE o.id IS NULL;
END
$$; 